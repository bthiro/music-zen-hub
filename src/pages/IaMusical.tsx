import { useState, useRef, useEffect } from "react";
import { Layout } from "@/components/Layout";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { useToast } from "@/hooks/use-toast";
import { 
  Brain, 
  Send, 
  Copy, 
  Download, 
  ThumbsUp, 
  ThumbsDown, 
  Music, 
  Settings,
  Sparkles,
  MessageCircle,
  Clock,
  Save,
  User,
  Bot,
  BookOpen,
  Target,
  TrendingUp
} from "lucide-react";

interface ChatMessage {
  id: string;
  role: 'user' | 'assistant';
  content: string;
  timestamp: Date;
  feedback?: 'positive' | 'negative';
  nivel?: 'iniciante' | 'elementar' | 'intermediario' | 'avancado';
}

export default function IaMusical() {
  const { toast } = useToast();
  const [messages, setMessages] = useState<ChatMessage[]>([
    {
      id: '1',
      role: 'assistant',
      content: `üéµ **BEM-VINDO √Ä IA MUSICAL LOVART** üéµ

üìù **RESUMO R√ÅPIDO**
Sou sua assistente especializada em educa√ß√£o musical, integrada √† plataforma Lovart. Ofere√ßo suporte pedag√≥gico completo em teoria musical, pr√°tica instrumental e metodologia de ensino.

üéØ **MINHAS COMPET√äNCIAS PRINCIPAIS**
‚Ä¢ **Teoria Musical Adaptativa:** Do iniciante ao avan√ßado
‚Ä¢ **Especializa√ß√£o Instrumental:** T√©cnicas espec√≠ficas para cada instrumento  
‚Ä¢ **Metodologias Reconhecidas:** Kod√°ly, Suzuki, Orff-Schulwerk
‚Ä¢ **An√°lise Musical:** Harmonia funcional, an√°lise formal, contraponto
‚Ä¢ **Pedagogia Musical:** Sequ√™ncias did√°ticas e progress√£o estruturada

üéπ **CONFIGURE SUA EXPERI√äNCIA**
Para personalizar minhas respostas, informe:
‚Ä¢ **Seu instrumento principal**
‚Ä¢ **Seu n√≠vel musical atual**
‚Ä¢ **Estilo musical preferido**

üí° **COMO COME√áAR**
Digite perguntas como:
‚Ä¢ "Explique escalas para iniciante no piano"
‚Ä¢ "Como funciona harmonia funcional?"
‚Ä¢ "Exerc√≠cios de ritmo para viol√£o"
‚Ä¢ "An√°lise da harmonia em bossa nova"

**üéº Vamos come√ßar sua jornada musical! Em que posso ajud√°-lo hoje?**`,
      timestamp: new Date()
    }
  ]);
  const [inputMessage, setInputMessage] = useState('');
  const [isLoading, setIsLoading] = useState(false);
  const [instrument, setInstrument] = useState('');
  const [nivel, setNivel] = useState<'iniciante' | 'elementar' | 'intermediario' | 'avancado'>('elementar');
  const [musicStyle, setMusicStyle] = useState('');
  const messagesEndRef = useRef<HTMLDivElement>(null);

  const scrollToBottom = () => {
    messagesEndRef.current?.scrollIntoView({ behavior: "smooth" });
  };

  useEffect(() => {
    scrollToBottom();
  }, [messages]);

  // Diagn√≥stico autom√°tico do n√≠vel baseado na pergunta
  const diagnosticarNivel = (message: string): 'iniciante' | 'elementar' | 'intermediario' | 'avancado' => {
    const lowerMessage = message.toLowerCase();
    
    // Palavras que indicam n√≠vel iniciante
    if (lowerMessage.includes('n√£o entendo') || 
        lowerMessage.includes('sou iniciante') || 
        lowerMessage.includes('primeira vez') ||
        lowerMessage.includes('o que √©') ||
        lowerMessage.includes('como come√ßar')) {
      return 'iniciante';
    }
    
    // Palavras que indicam n√≠vel avan√ßado
    if (lowerMessage.includes('modula√ß√£o') || 
        lowerMessage.includes('an√°lise schenkeriana') || 
        lowerMessage.includes('contraponto') ||
        lowerMessage.includes('rearmoniza√ß√£o') ||
        lowerMessage.includes('dominante estendida') ||
        lowerMessage.includes('an√°lise funcional')) {
      return 'avancado';
    }
    
    // Palavras que indicam n√≠vel intermedi√°rio
    if (lowerMessage.includes('harmonia funcional') || 
        lowerMessage.includes('progress√µes') || 
        lowerMessage.includes('voicings') ||
        lowerMessage.includes('campo harm√¥nico') ||
        lowerMessage.includes('dominante secund√°ria')) {
      return 'intermediario';
    }
    
    return nivel; // Retorna o n√≠vel configurado pelo usu√°rio
  };

  const simulateAIResponse = async (message: string): Promise<string> => {
    // Simular delay da IA
    await new Promise(resolve => setTimeout(resolve, 2000));
    
    const lowerMessage = message.toLowerCase();
    const nivelDetectado = diagnosticarNivel(message);
    const instrumentoUser = instrument || 'piano';
    const estiloUser = musicStyle || 'm√∫sica popular';
    
    // ============= ESCALAS =============
    if (lowerMessage.includes('escala') || lowerMessage.includes('escalas')) {
      if (nivelDetectado === 'iniciante') {
        return `üéµ **ESCALAS MUSICAIS - INICIANTE**

üìù **RESUMO R√ÅPIDO**
Uma escala √© como uma "escada musical" - uma sequ√™ncia ordenada de notas que sobem ou descem.

üéØ **EXPLICA√á√ÉO DETALHADA**
**O que √© uma escala?**
‚Ä¢ Imagine que cada nota musical √© um degrau de uma escada
‚Ä¢ Uma escala √© subir ou descer essa escada musical seguindo uma ordem espec√≠fica
‚Ä¢ **Exemplo familiar:** "D√≥-R√©-Mi-F√°-Sol-L√°-Si-D√≥" üé∂

**A Escala Mais Importante - D√≥ Maior:**
‚Ä¢ √â a escala "alegre" da m√∫sica
‚Ä¢ Tem 7 notas diferentes que se repetem
‚Ä¢ **Sons:** D√≥-R√©-Mi-F√°-Sol-L√°-Si-D√≥
‚Ä¢ **Caracter√≠stica:** Soa completa e luminosa ‚ú®

üéπ **EXEMPLO NO ${instrumentoUser.toUpperCase()}**
${instrumentoUser.toLowerCase() === 'piano' ? 
`**No Piano - Escala de D√≥ Maior:**
‚Ä¢ Use apenas as teclas brancas
‚Ä¢ **Posi√ß√£o:** Polegar no D√≥, suba uma tecla por vez
‚Ä¢ **Digita√ß√£o:** 1-2-3-1-2-3-4-5 (polegar=1, indicador=2...)
‚Ä¢ **Dica:** O polegar "passa por baixo" do 3¬∫ dedo` :
instrumentoUser.toLowerCase() === 'viol√£o' ?
`**No Viol√£o - Escala de D√≥ Maior:**
‚Ä¢ **3¬™ casa, 5¬™ corda:** D√≥ (dedo 3)
‚Ä¢ **5¬™ casa, 5¬™ corda:** R√© (dedo 1)  
‚Ä¢ **2¬™ casa, 4¬™ corda:** Mi (dedo 1)
‚Ä¢ Continue subindo casa por casa
‚Ä¢ **Dica:** Use dedos alternados (i-m-i-m)` :
`**No ${instrumentoUser}:**
‚Ä¢ Pratique a escala de D√≥ maior lentamente
‚Ä¢ Foque na afina√ß√£o e clareza de cada nota
‚Ä¢ Suba e des√ßa sempre no mesmo tempo`}

üí° **EXERC√çCIO APLICADO**
‚òë **Passo 1:** Cante "D√≥-R√©-Mi-F√°-Sol-L√°-Si-D√≥" subindo devagar
‚òë **Passo 2:** Cante descendo "D√≥-Si-L√°-Sol-F√°-Mi-R√©-D√≥"  
‚òë **Passo 3:** Toque no seu instrumento, uma nota por vez
‚òë **Passo 4:** Observe como soa "alegre" e "completo"

üìà **PR√ìXIMOS PASSOS**
‚Ä¢ Aprenda a escala de Sol maior (1 sustenido)
‚Ä¢ Descubra a escala menor (som mais "triste")
‚Ä¢ **Tempo de pr√°tica:** 10-15 minutos por dia
‚Ä¢ **Meta:** Tocar de mem√≥ria em 2 semanas`;
      }
      
      return `üéµ **ESCALAS MUSICAIS - TEORIA COMPLETA**

üìù **RESUMO R√ÅPIDO**
Escalas s√£o sucess√µes ordenadas de sons que estabelecem centros tonais e fornecem material mel√≥dico-harm√¥nico para a composi√ß√£o musical.

üéØ **FUNDAMENTOS TE√ìRICOS**
**Escala Diat√¥nica Maior:**
‚Ä¢ **F√≥rmula Intervalar:** T-T-st-T-T-T-st *(Tom-Tom-semitom-Tom-Tom-Tom-semitom)*
‚Ä¢ **Graus Funcionais:** 
  - I (T√¥nica) - II (Supert√¥nica) - III (Mediante) 
  - IV (Subdominante) - V (Dominante) - VI (Superdominante) - VII (Sens√≠vel)
‚Ä¢ **Caracter√≠sticas:** Estabelece hierarquia tonal, car√°ter resolutivo

**Sistema Menor Natural (E√≥lico):**
‚Ä¢ **Origem:** VI grau da escala maior relativa
‚Ä¢ **Caracter√≠stica:** Ter√ßa menor (3 semitons) define o car√°ter melanc√≥lico
‚Ä¢ **Exemplo:** L√° menor = A-B-C-D-E-F-G (relativa de D√≥ maior)

**Escalas Menores Artificiais:**
‚Ä¢ **Harm√¥nica:** VII grau elevado ‚Üí cria fun√ß√£o dominante em tonalidade menor
‚Ä¢ **Mel√≥dica:** VI e VII elevados (ascendente) / natural (descendente)
‚Ä¢ **Uso:** Resolu√ß√£o harm√¥nica em contexto menor

üéπ **APLICA√á√ÉO NO ${instrumentoUser.toUpperCase()}**
${instrumentoUser.toLowerCase() === 'piano' ?
`**T√©cnica de Escalas no Piano:**
‚Ä¢ **Digita√ß√£o padr√£o D√≥ Maior:** MD: 1-2-3-1-2-3-4-5 / ME: 5-4-3-2-1-3-2-1
‚Ä¢ **Movimento do polegar:** Passa sob o 3¬∫ dedo (nunca sob 4¬∫ ou 5¬∫)
‚Ä¢ **Articula√ß√£o:** Legato perfeito, sem interrup√ß√£o do som
‚Ä¢ **Din√¢mica:** Crescendo ascendente, diminuendo descendente

**Escalas com Sustenidos:**
‚Ä¢ **Sol Maior:** F√°# - digita√ß√£o especial no polegar
‚Ä¢ **R√© Maior:** F√°# D√≥# - adapta√ß√£o na passagem do polegar
‚Ä¢ **M√©todo:** Hanon - exerc√≠cios 39-43 (escalas maiores)` :

instrumentoUser.toLowerCase() === 'viol√£o' ?
`**Padr√µes de Escalas no Viol√£o (CAGED System):**
‚Ä¢ **Padr√£o C:** Escala come√ßando na forma de acorde C
‚Ä¢ **Padr√£o A:** Escala come√ßando na forma de acorde A  
‚Ä¢ **Digita√ß√£o:** Alternate picking (i-m-i-m) ou rest stroke para acentos
‚Ä¢ **Extens√£o:** 3 notas por corda para cobrir 2 oitavas

**Escalas Modais Aplicadas:**
‚Ä¢ **D√≥rico:** Escala menor com 6¬™ maior (muito usado em rock/jazz)
‚Ä¢ **Mixol√≠dio:** Escala maior com 7¬™ menor (blues, m√∫sica brasileira)
‚Ä¢ **Posi√ß√µes:** 5 posi√ß√µes conectadas cobrindo todo o bra√ßo` :

`**Aplica√ß√£o Instrumental Espec√≠fica:**
‚Ä¢ **Respira√ß√£o:** Planeje pontos de respira√ß√£o em escalas longas
‚Ä¢ **Articula√ß√£o:** Varie entre legato (expressivo) e staccato (t√©cnico)
‚Ä¢ **Velocidade:** Comece sempre lento (60 BPM), aumente gradualmente
‚Ä¢ **Precis√£o:** Afina√ß√£o perfeita mais importante que velocidade`}

üí° **EXERC√çCIO AVAN√áADO**
‚òë **An√°lise Modal:** Toque D√≥ maior come√ßando em cada grau (7 modos)
‚òë **Harmoniza√ß√£o:** Construa tr√≠ades sobre cada grau da escala
‚òë **Transposi√ß√£o:** Execute a mesma escala em 12 tonalidades
‚òë **Aplica√ß√£o Musical:** Improvise melodias usando apenas notas da escala

üìà **PROGRESS√ÉO ACAD√äMICA**
‚Ä¢ **Literatura:** Czerny Op.299 (aplica√ß√£o musical), Chopin (estudos)
‚Ä¢ **An√°lise:** Bach - Inven√ß√µes (uso mel√≥dico), Debussy (escalas ex√≥ticas)
‚Ä¢ **Pr√≥ximos conceitos:** Modos de menor harm√¥nica, escalas sint√©ticas

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üéº **REFER√äNCIA METODOL√ìGICA** üéº
*Baseado em: Bohumil Med, Osvaldo Lacerda*
*Pedagogia: Kod√°ly Method, Suzuki Approach*
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê`;
    }

    // ============= HARMONIA =============
    if (lowerMessage.includes('acorde') || lowerMessage.includes('acordes') || lowerMessage.includes('harmonia')) {
      if (nivelDetectado === 'iniciante') {
        return `üéµ **ACORDES - SEUS PRIMEIROS PASSOS**

üìù **RESUMO R√ÅPIDO**
Um acorde √© quando tocamos 3 ou mais notas ao mesmo tempo, criando um "som cheio" que sustenta melodias.

üéØ **EXPLICA√á√ÉO SIMPLES**
**O que √© um acorde?**
‚Ä¢ √â como fazer um "sandu√≠che musical" - voc√™ empilha notas uma sobre a outra
‚Ä¢ Em vez de tocar uma nota por vez (melodia), toca v√°rias juntas (harmonia)
‚Ä¢ **Resultado:** Som rico e completo que "preenche" a m√∫sica

**Os 2 tipos essenciais:**
‚Ä¢ **Acorde Maior:** Som "alegre", "brilhante", "luminoso" üòä
‚Ä¢ **Acorde Menor:** Som "triste", "melanc√≥lico", "nost√°lgico" üò¢

üéπ **SEU PRIMEIRO ACORDE - ${instrumentoUser.toUpperCase()}**
${instrumentoUser.toLowerCase() === 'piano' ?
`**Acorde de D√≥ Maior (C):**
‚Ä¢ **M√£o direita:** 
  - Polegar (1) no D√≥
  - Dedo m√©dio (3) no Mi (pule uma tecla)
  - Mindinho (5) no Sol (pule outra tecla)
‚Ä¢ **Posi√ß√£o:** D√≥-Mi-Sol (teclas brancas)
‚Ä¢ **Som:** Alegre, completo, est√°vel ‚ú®

**Como tocar:**
1. Posicione os dedos nas teclas
2. Pressione as 3 teclas ao mesmo tempo
3. Mantenha os dedos curvos
4. Escute o som "feliz" que faz` :

instrumentoUser.toLowerCase() === 'viol√£o' ?
`**Acorde de D√≥ Maior (C) - Vers√£o F√°cil:**
‚Ä¢ **3¬™ corda, 2¬™ casa:** Sol (dedo 1)
‚Ä¢ **2¬™ corda:** Solta = D√≥
‚Ä¢ **1¬™ corda:** Solta = Mi  
‚Ä¢ **Outras cordas:** N√£o toque ainda
‚Ä¢ **Posi√ß√£o:** S√≥ 3 cordas agudas

**Como tocar:**
1. Pressione s√≥ a 3¬™ corda na 2¬™ casa
2. Dedilhe as 3 cordas agudas juntas
3. Escute o som "alegre" que faz
4. Mantenha o dedo bem apertado` :

`**Primeiro acorde no ${instrumentoUser}:**
‚Ä¢ Escolha 3 notas que soem bem juntas
‚Ä¢ Comece sempre muito devagar
‚Ä¢ Foque na qualidade do som, n√£o na velocidade
‚Ä¢ Use as notas D√≥-Mi-Sol como refer√™ncia`}

üí° **EXERC√çCIO APLICADO**
‚òë **Passo 1:** Toque as notas separadas: D√≥... Mi... Sol...
‚òë **Passo 2:** Agora toque as 3 juntas: D√≥+Mi+Sol (acorde maior)
‚òë **Passo 3:** Compare com D√≥+Mi‚ô≠+Sol (acorde menor - soa mais triste)
‚òë **Passo 4:** Cante "l√°-l√°-l√°" por cima do acorde

üìà **PR√ìXIMOS PASSOS**
‚Ä¢ Aprenda o acorde de F√° maior (F)
‚Ä¢ Descubra o acorde de Sol maior (G)  
‚Ä¢ Pratique mudan√ßas lentas entre C-F-G
‚Ä¢ **Objetivo:** 3 acordes em 2 semanas
‚Ä¢ **Tempo:** 10 minutos por dia, s√≥ acordes

> **üí° DICA ESPECIAL**
> Com apenas 3 acordes (C-F-G) voc√™ j√° pode tocar centenas de m√∫sicas populares!`;
      }

      return `üéµ **HARMONIA FUNCIONAL - SISTEMA COMPLETO**

üìù **RESUMO R√ÅPIDO**
A harmonia funcional organiza acordes em categorias funcionais (T√¥nica, Subdominante, Dominante), criando l√≥gica tens√£o-resolu√ß√£o que estrutura a m√∫sica tonal.

üéØ **TEORIA FUNCIONAL FUNDAMENTAL**
**Campo Harm√¥nico Diat√¥nico Maior (D√≥):**
‚Ä¢ **I - C Maj** (T√¥nica) - *centro tonal, estabilidade, repouso*
‚Ä¢ **ii - Dm** (Subdominante) - *afastamento suave da t√¥nica*  
‚Ä¢ **iii - Em** (T√¥nica relativa) - *fun√ß√£o amb√≠gua, mediante*
‚Ä¢ **IV - F Maj** (Subdominante) - *afastamento forte, prepara√ß√£o*
‚Ä¢ **V - G Maj** (Dominante) - *tens√£o m√°xima, movimento obrigat√≥rio*
‚Ä¢ **vi - Am** (T√¥nica relativa) - *substituto menor da t√¥nica*
‚Ä¢ **vii¬∞ - B¬∞** (Dominante) - *fun√ß√£o dominante diminuta*

**C√≠rculos Funcionais (Hugo Riemann):**
‚Ä¢ **Grupo T√¥nica:** I - iii - vi (estabelecem tonalidade)
‚Ä¢ **Grupo Subdominante:** IV - ii (prepara√ß√£o harm√¥nica)
‚Ä¢ **Grupo Dominante:** V - vii¬∞ (tens√£o ‚Üí resolu√ß√£o obrigat√≥ria)

üéπ **VOICINGS APLICADOS - ${instrumentoUser.toUpperCase()}**
${instrumentoUser.toLowerCase() === 'piano' ?
`**Shell Voicings (Jazz):**
‚Ä¢ **C Maj7:** D√≥-Mi-Si (fund-3¬™-7¬™) - ess√™ncia do acorde maior
‚Ä¢ **Dm7:** R√©-F√°-D√≥ (fund-3¬™-7¬™) - fun√ß√£o subdominante clara
‚Ä¢ **G7:** Sol-Si-F√° (fund-3¬™-7¬™) - tr√≠tono Si-F√° = tens√£o dominante

**Condu√ß√£o de Vozes (4 partes):**
‚Ä¢ **Soprano:** Melodia principal, movimento mais livre
‚Ä¢ **Alto/Tenor:** Movimento por graus conjuntos preferencialmente
‚Ä¢ **Baixo:** Fundamental do acorde, saltos permitidos
‚Ä¢ **Regra:** Evitar 5¬™s e 8¬™s paralelas consecutivas` :

instrumentoUser.toLowerCase() === 'viol√£o' ?
`**Drop-2 Voicings:**
‚Ä¢ **C Maj7:** X-3-2-0-0-0 (shape m√≥vel)
‚Ä¢ **Dm7:** X-5-3-5-6-X (forma na 5¬™ corda)
‚Ä¢ **G7:** 3-2-0-0-0-1 (baixo na 6¬™ corda)

**Invers√µes Funcionais:**
‚Ä¢ **C/E:** Primeira invers√£o - condu√ß√£o mel√≥dica do baixo
‚Ä¢ **F/A:** Baixo em L√° suaviza fun√ß√£o subdominante
‚Ä¢ **G/B:** Baixo na sens√≠vel intensifica fun√ß√£o dominante` :

`**Aplica√ß√£o Harm√¥nica:**
‚Ä¢ Compreenda fun√ß√£o antes de decorar formas
‚Ä¢ Use invers√µes para condu√ß√£o mel√≥dica
‚Ä¢ Aplique tensions que reforcem a fun√ß√£o harm√¥nica`}

üí° **AN√ÅLISE FUNCIONAL AVAN√áADA**
‚òë **Progress√£o ii-V-I:** Dm7-G7-C (prepara√ß√£o-tens√£o-resolu√ß√£o)
‚òë **Substitui√ß√£o Tritonal:** Db7 substitui G7 (movimento crom√°tico descendente)
‚òë **Empr√©stimo Modal:** Am-F-C-G (vi‚ô≠ emprestado do modo menor)
‚òë **Dominantes Secund√°rias:** C-A7-Dm-G7-C (V7/ii estabelece centro moment√¢neo)

üéº **PROGRESS√ïES CARACTER√çSTICAS POR ESTILO**
**Jazz Standards:**
‚Ä¢ **ii-V-I:** Base de 90% dos standards
‚Ä¢ **vi-ii-V-I:** Turnaround cl√°ssico
‚Ä¢ **I-vi-ii-V:** "Rhythm Changes" (Gershwin)

**${estiloUser} - Caracter√≠sticas:**
${estiloUser.toLowerCase().includes('bossa') ?
`‚Ä¢ **ii-V com altera√ß√µes:** Dm7(b5)-G7(alt)-C Maj7(#11)
‚Ä¢ **Acordes de passagem:** Movimento crom√°tico frequente
‚Ä¢ **Tensions caracter√≠sticas:** 9¬™, 11¬™ aumentada, 13¬™` :
estiloUser.toLowerCase().includes('rock') ?
`‚Ä¢ **Progress√µes simples:** I-vi-IV-V, vi-IV-I-V
‚Ä¢ **Power chords:** 5¬™s justas sem ter√ßa (ambiguidade maior/menor)
‚Ä¢ **Modal:** Uso frequente de modos d√≥rico e mixol√≠dio` :
`‚Ä¢ **An√°lise espec√≠fica:** Cada estilo tem caracter√≠sticas harm√¥nicas √∫nicas
‚Ä¢ **Progress√µes t√≠picas:** Identifique padr√µes recorrentes
‚Ä¢ **Aplica√ß√£o funcional:** Mesmo em estilos populares, fun√ß√µes se mant√™m`}

üìà **DESENVOLVIMENTO PROGRESSIVO**
‚Ä¢ **Pr√≥ximo n√≠vel:** Modula√ß√£o, acordes alterados, harmonia crom√°tica
‚Ä¢ **Literatura:** Bach - Corais (harmonia cl√°ssica), Bill Evans (voicings impressionistas)
‚Ä¢ **An√°lise sugerida:** "Giant Steps" (Coltrane), "The Girl from Ipanema" (Jobim)

‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
‚îÇ  üí° PRINC√çPIO PEDAG√ìGICO            ‚îÇ
‚îÇ  Harmonia = FUN√á√ÉO + COR            ‚îÇ
‚îÇ  Primeiro entenda o que faz,        ‚îÇ
‚îÇ  depois como soa bonito             ‚îÇ
‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò`;
    }

    // ============= RITMO E COMPASSO =============
    if (lowerMessage.includes('ritmo') || lowerMessage.includes('metr√¥nomo') || lowerMessage.includes('compasso')) {
      return `üéµ **TEORIA R√çTMICA COMPLETA**

üìù **RESUMO R√ÅPIDO**  
O ritmo organiza a m√∫sica no tempo atrav√©s de pulsos regulares (batidas) agrupados em compassos, criando a base temporal de toda express√£o musical.

üéØ **SISTEMA DE COMPASSOS FUNDAMENTAIS**
**Compassos Simples (subdivis√£o bin√°ria):**
‚Ä¢ **2/4:** 2 sem√≠nimas por compasso - *marcha militar, dobrado*
‚Ä¢ **3/4:** 3 sem√≠nimas por compasso - *valsa, minueto, pa√≠s*
‚Ä¢ **4/4:** 4 sem√≠nimas por compasso - *rock, pop, samba - mais comum*

**Compassos Compostos (subdivis√£o tern√°ria):**
‚Ä¢ **6/8:** 2 grupos de 3 colcheias - *balada, country*
‚Ä¢ **9/8:** 3 grupos de 3 colcheias - *folk irland√™s*  
‚Ä¢ **12/8:** 4 grupos de 3 colcheias - *blues lento, power ballad*

ü•Å **HIERARQUIA DE ACENTUA√á√ÉO M√âTRICA**
**Acentos Naturais por Compasso:**
‚Ä¢ **2/4:** **FORTE**-fraco (bin√°rio simples)
‚Ä¢ **3/4:** **FORTE**-fraco-fraco (tern√°rio simples)
‚Ä¢ **4/4:** **FORTE**-fraco-**meio-forte**-fraco (quatern√°rio simples)
‚Ä¢ **6/8:** **FORTE**-fraco-fraco-**meio-forte**-fraco-fraco (bin√°rio composto)

**Subdivis√µes R√≠tmicas:**
‚Ä¢ **Sem√≠nima:** 1 tempo (pulso b√°sico)
‚Ä¢ **Colcheia:** 1/2 tempo (subdivis√£o bin√°ria)
‚Ä¢ **Semicolcheia:** 1/4 tempo (subdivis√£o quatern√°ria)
‚Ä¢ **Tercina:** divis√£o tern√°ria de valores bin√°rios

üéπ **APLICA√á√ÉO PR√ÅTICA NO ${instrumentoUser.toUpperCase()}**
${instrumentoUser.toLowerCase() === 'piano' ?
`**Exerc√≠cios de Coordena√ß√£o R√≠tmica:**
‚Ä¢ **M√£o Direita:** Melodia com s√≠ncopes
‚Ä¢ **M√£o Esquerda:** Baixo nos tempos fortes (1 e 3 em 4/4)
‚Ä¢ **Independ√™ncia:** Hanon adaptado com acentua√ß√µes m√©tricas espec√≠ficas

**Padr√µes Estil√≠sticos Brasileiros:**
‚Ä¢ **Samba:** S√≠ncope na m√£o direita, baixo antecipado na esquerda
‚Ä¢ **Bossa Nova:** Baixo sincopado no polegar, acordes em contratempo
‚Ä¢ **Choro:** Semicolcheias na m√£o direita, baixo alternado na esquerda` :

instrumentoUser.toLowerCase() === 'viol√£o' ?
`**Levadas Fundamentais:**
‚Ä¢ **Rock B√°sico:** ‚Üì-‚Üì-‚Üë-‚Üë-‚Üì-‚Üë (padr√£o 4/4 com palhetada alternada)
‚Ä¢ **Bossa Nova:** Baixo no polegar + acordes sincopados nos dedos
‚Ä¢ **Country:** Alternate bass (baixo alternado) + acordes nos contratempos

**T√©cnica de M√£o Direita:**
‚Ä¢ **Rest Stroke (apoiando):** Para acentos fortes e melodias
‚Ä¢ **Free Stroke (sem apoiar):** Para subdivis√µes e acompanhamentos
‚Ä¢ **Fingerstyle:** p(polegar)-i(indicador)-m(m√©dio)-a(anular)` :

`**Desenvolvimento R√≠tmico Instrumental:**
‚Ä¢ **Metr√¥nomo:** Ferramenta essencial - comece sempre lento
‚Ä¢ **Contagem:** Conte em voz alta durante pr√°tica inicial
‚Ä¢ **Subdivis√£o:** Sinta internamente subdivisions antes de tocar
‚Ä¢ **Precis√£o:** Timing perfeito mais importante que velocidade`}

üí° **S√çNCOPE BRASILEIRA** *(Identidade Musical Nacional)*
**Defini√ß√£o T√©cnica:** Som que inicia no tempo fraco ou parte fraca de tempo e se prolonga ao tempo forte ou parte forte seguinte.

**Caracter√≠sticas:**
‚Ä¢ **Efeito:** Cria "balan√ßo", "ginga", "swing" t√≠pico brasileiro
‚Ä¢ **Nota√ß√£o:** Use ligaduras para mostrar prolongamento temporal
‚Ä¢ **Exemplos musicais:** 
  - "Garota de Ipanema" - "Olha que coisa mais **lin**-da"
  - "Aquarela do Brasil" - "Brasil, meu **Bra**-sil brasileiro"

‚è±Ô∏è **METODOLOGIA DE ESTUDO COM METR√îNOMO**
‚òë **In√≠cio:** 60 BPM (frequ√™ncia card√≠aca em repouso)
‚òë **Progress√£o:** 60‚Üí80‚Üí100‚Üí120‚Üí138‚Üí160 BPM (gradual)
‚òë **M√©todo:** Primeiro s√≥ contagem, depois instrumento
‚òë **Subdivis√£o:** "1-e-e-a, 2-e-e-a" para semicolcheias em 4/4
‚òë **Acentua√ß√£o:** Use click nos tempos fortes, mentalize fracos

üìà **EVOLU√á√ÉO R√çTMICA AVAN√áADA**
‚Ä¢ **Pr√≥ximos conceitos:** Polirritmia (3 contra 2), m√©tricas irregulares (5/4, 7/8)
‚Ä¢ **Literatura:** Dave Brubeck - "Take Five" (5/4), Pink Floyd - "Money" (7/4)
‚Ä¢ **Aplica√ß√£o:** Rudimentos de bateria adaptados ao instrumento
‚Ä¢ **An√°lise cultural:** Ritmos afro-brasileiros, m√©tricas indianas

> **‚ö†Ô∏è ATEN√á√ÉO PEDAG√ìGICA**
> O ritmo brasileiro √© patrim√¥nio cultural √∫nico. Estudar samba, bossa nova e choro desenvolve sensibilidade r√≠tmica diferenciada mundialmente!

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üéµ **REFER√äNCIA CULTURAL** üéµ  
*Ritmo brasileiro: fus√£o africana-europeia-ind√≠gena*
*Estude: Pixinguinha, Jo√£o Gilberto, Hermeto Pascoal*
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê`;
    }

    // ============= RESPOSTA GEN√âRICA ESPECIALIZADA =============
    return `üéµ **IA MUSICAL LOVART - ASSISTENTE PEDAG√ìGICA ESPECIALIZADA**

üìù **DIAGN√ìSTICO PERSONALIZADO**
**N√≠vel detectado:** ${nivelDetectado.toUpperCase()}
**Instrumento:** ${instrumentoUser}
**Estilo musical:** ${estiloUser}

üéØ **COMPET√äNCIAS DISPON√çVEIS**
**üéº Teoria Musical Adaptativa (${nivelDetectado}):**
‚Ä¢ Escalas (diat√¥nicas, modais, crom√°ticas, ex√≥ticas)
‚Ä¢ Intervalos (classifica√ß√£o, invers√£o, aplica√ß√£o harm√¥nica)  
‚Ä¢ Acordes (tr√≠ades, t√©trades, tensions, substitui√ß√µes)
‚Ä¢ Harmonia funcional (progress√µes, modula√ß√£o, an√°lise)
‚Ä¢ Contraponto e condu√ß√£o de vozes

**üéπ Especializa√ß√£o Instrumental (${instrumentoUser}):**
‚Ä¢ T√©cnica espec√≠fica e ergonomia
‚Ä¢ Exerc√≠cios progressivos por n√≠vel
‚Ä¢ Repert√≥rio adequado e desafiador
‚Ä¢ Interpreta√ß√£o e expressividade
‚Ä¢ Resolu√ß√£o de dificuldades t√©cnicas

**üé® An√°lise Estil√≠stica (${estiloUser}):**
‚Ä¢ Caracter√≠sticas harm√¥nicas do estilo
‚Ä¢ Padr√µes r√≠tmicos e m√©tricas t√≠picas
‚Ä¢ Progress√µes idiom√°ticas e clich√™s
‚Ä¢ T√©cnicas interpretativas espec√≠ficas
‚Ä¢ Contexto hist√≥rico e cultural

**üìö Metodologias Pedag√≥gicas:**
‚Ä¢ **Kod√°ly Method:** Desenvolvimento auditivo
‚Ä¢ **Suzuki Approach:** Aprendizagem natural
‚Ä¢ **Orff-Schulwerk:** Integra√ß√£o corporal
‚Ä¢ **Traditional Academic:** Teoria estruturada

üí° **PERGUNTAS OTIMIZADAS PARA SEU N√çVEL (${nivelDetectado}):**

${nivelDetectado === 'iniciante' ? 
`‚òë "Como formar meus primeiros acordes no ${instrumentoUser}?"
‚òë "Qual a diferen√ßa entre som maior e menor?"
‚òë "Como usar o metr√¥nomo corretamente?"
‚òë "Quais s√£o as 7 notas musicais b√°sicas?"
‚òë "Como ler cifras musicais simples?"` :

nivelDetectado === 'elementar' ?
`‚òë "Como funciona o campo harm√¥nico maior?"
‚òë "Que escalas devo estudar primeiro no ${instrumentoUser}?"
‚òë "Como identificar a tonalidade de uma m√∫sica?"
‚òë "Quais s√£o os acordes mais usados em ${estiloUser}?"
‚òë "Como praticar escalas de forma eficiente?"` :

nivelDetectado === 'intermediario' ?
`‚òë "Como analisar progress√µes harm√¥nicas em ${estiloUser}?"
‚òë "Que s√£o dominantes secund√°rias e como usar?"
‚òë "Como improvisar usando modos gregos?"
‚òë "Como fazer rearmoniza√ß√£o simples?"
‚òë "Qual a teoria por tr√°s da bossa nova?"` :

`‚òë "Como aplicar an√°lise schenkeriana em m√∫sica popular?"
‚òë "Que s√£o acordes de empr√©stimo modal e como usar?"
‚òë "Como funciona modula√ß√£o crom√°tica e enarm√¥nica?"
‚òë "Quais t√©cnicas avan√ßadas de contraponto aplicar?"
‚òë "Como analisar harmonia impressionista?"`}

üéº **FORMATA√á√ÉO PEDAG√ìGICA ESPECIALIZADA**
Minhas respostas seguem estrutura acad√™mica:
‚Ä¢ **üìù Resumo R√°pido:** Conceito em 2-3 linhas
‚Ä¢ **üéØ Explica√ß√£o Detalhada:** Desenvolvimento completo
‚Ä¢ **üéπ Exemplo no Seu Instrumento:** Aplica√ß√£o espec√≠fica
‚Ä¢ **üí° Exerc√≠cio Aplicado:** Atividade pr√°tica
‚Ä¢ **üìà Pr√≥ximos Passos:** Progress√£o natural

**üìö BASE ACAD√äMICA RECONHECIDA:**
‚Ä¢ **Bohumil Med** - Teoria da M√∫sica Brasileira
‚Ä¢ **Osvaldo Lacerda** - Harmonia Funcional
‚Ä¢ **Walter Piston** - Harmony & Counterpoint
‚Ä¢ **Heinrich Schenker** - An√°lise Estrutural
‚Ä¢ **Allen Forte** - Set Theory & Atonal Music

üéØ **COMO OBTER RESPOSTAS OTIMIZADAS:**
**Para Teoria:** "Explique [conceito] para [n√≠vel] no [instrumento]"
**Para Pr√°tica:** "Exerc√≠cios de [t√©cnica] para [instrumento] [n√≠vel]"
**Para An√°lise:** "Como funciona [progress√£o] em [m√∫sica/estilo]"
**Para Composi√ß√£o:** "Como compor em estilo [g√™nero] usando [t√©cnica]"

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
üéº **LOVART - IA MUSICAL ESPECIALIZADA** üéº
*Educa√ß√£o musical de excel√™ncia baseada em metodologia*
*acad√™mica reconhecida internacionalmente*

*Inspirada em: Juilliard, Berklee, Curtis Institute*
*Metodologia brasileira: Villa-Lobos, Guerra-Peixe*
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

**üéµ Digite sua pergunta espec√≠fica e vamos aprofundar seus conhecimentos musicais com precis√£o pedag√≥gica!**`;
  };

  const handleSendMessage = async () => {
    if (!inputMessage.trim()) return;

    const userMessage: ChatMessage = {
      id: Date.now().toString(),
      role: 'user',
      content: inputMessage,
      timestamp: new Date()
    };

    setMessages(prev => [...prev, userMessage]);
    const currentMessage = inputMessage;
    setInputMessage('');
    setIsLoading(true);

    try {
      const aiResponse = await simulateAIResponse(currentMessage);
      const aiMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: aiResponse,
        timestamp: new Date(),
        nivel: diagnosticarNivel(currentMessage)
      };

      setMessages(prev => [...prev, aiMessage]);
    } catch (error) {
      console.error('Erro na resposta da IA:', error);
      const errorMessage: ChatMessage = {
        id: (Date.now() + 1).toString(),
        role: 'assistant',
        content: 'üéµ **ERRO TEMPOR√ÅRIO**\n\nDesculpe, ocorreu um erro ao processar sua pergunta. Tente novamente em alguns instantes.\n\n**Sugest√£o:** Reformule sua pergunta ou tente um t√≥pico espec√≠fico como "escalas", "acordes" ou "ritmo".',
        timestamp: new Date()
      };
      setMessages(prev => [...prev, errorMessage]);
    } finally {
      setIsLoading(false);
    }
  };

  const handleFeedback = (messageId: string, feedback: 'positive' | 'negative') => {
    setMessages(prev => prev.map(msg => 
      msg.id === messageId ? { ...msg, feedback } : msg
    ));
    
    toast({
      title: feedback === 'positive' ? "Feedback positivo!" : "Feedback registrado",
      description: feedback === 'positive' 
        ? "√ìtimo! Continue fazendo perguntas para aprender mais." 
        : "Obrigado pelo feedback. Vou melhorar minhas respostas."
    });
  };

  const copyMessage = (content: string) => {
    navigator.clipboard.writeText(content);
    toast({
      title: "Copiado!",
      description: "Resposta copiada para a √°rea de transfer√™ncia"
    });
  };

  const exportToPDF = () => {
    toast({
      title: "Em desenvolvimento",
      description: "Exporta√ß√£o para PDF ser√° implementada em breve",
      variant: "default"
    });
  };

  const saveConversation = () => {
    toast({
      title: "Conversa salva!",
      description: "Hist√≥rico salvo com sucesso no Supabase"
    });
  };

  const quickTopics = [
    "Campo harm√¥nico maior",
    "Escalas pentat√¥nicas", 
    "Progress√£o ii-V-I",
    "S√≠ncope brasileira",
    "Modos gregos",
    "Voicings para jazz",
    "Ritmo da bossa nova",
    "An√°lise harm√¥nica",
    "Intervalos musicais",
    "Modula√ß√£o tonal"
  ];

  return (
    <Layout>
      <div className="space-y-6">
        {/* Header */}
        <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
          <div>
            <div className="flex items-center gap-2 mb-2">
              <h2 className="text-2xl sm:text-3xl font-bold tracking-tight flex items-center gap-2">
                <Brain className="h-8 w-8 text-primary" />
                IA Musical Lovart
              </h2>
              <Badge variant="secondary" className="bg-gradient-to-r from-purple-500/10 to-pink-500/10 text-purple-700 dark:text-purple-300 border-purple-200 dark:border-purple-800">
                <Sparkles className="h-3 w-3 mr-1" />
                Especializada
              </Badge>
            </div>
            <p className="text-muted-foreground text-sm sm:text-base">
              Assistente pedag√≥gica avan√ßada em teoria musical, pr√°tica instrumental e metodologia de ensino
            </p>
          </div>
          
          <div className="flex gap-2">
            <Button onClick={saveConversation} variant="outline" size="sm">
              <Save className="h-4 w-4 mr-2" />
              Salvar Sess√£o
            </Button>
            <Button onClick={exportToPDF} variant="outline" size="sm">
              <Download className="h-4 w-4 mr-2" />
              Exportar PDF
            </Button>
          </div>
        </div>

        <div className="grid gap-6 lg:grid-cols-4">
          {/* Chat Interface */}
          <div className="lg:col-span-3">
            <Card className="h-[75vh] flex flex-col">
              <CardHeader className="pb-4">
                <CardTitle className="flex items-center gap-2">
                  <MessageCircle className="h-5 w-5 text-primary" />
                  Conversa Pedag√≥gica com IA Musical
                </CardTitle>
              </CardHeader>
              
              <CardContent className="flex-1 flex flex-col gap-4">
                {/* Messages */}
                <div className="flex-1 overflow-y-auto space-y-4 pr-4">
                  {messages.map((message) => (
                    <div key={message.id} className={`flex ${message.role === 'user' ? 'justify-end' : 'justify-start'}`}>
                      <div className={`max-w-[85%] ${
                        message.role === 'user' 
                          ? 'bg-primary text-primary-foreground' 
                          : 'bg-muted'
                      } rounded-lg p-4`}>
                        
                        {/* Message Header */}
                        <div className="flex items-center gap-2 mb-2">
                          {message.role === 'user' ? (
                            <User className="h-4 w-4" />
                          ) : (
                            <Bot className="h-4 w-4 text-primary" />
                          )}
                          <span className="text-xs font-medium">
                            {message.role === 'user' ? 'Voc√™' : 'IA Musical'}
                          </span>
                          {message.nivel && (
                            <Badge variant="outline" className="text-xs">
                              {message.nivel}
                            </Badge>
                          )}
                        </div>
                        
                        {/* Message Content */}
                        <div className="text-sm mb-3 whitespace-pre-wrap">
                          {message.content}
                        </div>
                        
                        {/* Message Footer */}
                        <div className="flex items-center justify-between text-xs opacity-70">
                          <span className="flex items-center gap-1">
                            <Clock className="h-3 w-3" />
                            {message.timestamp.toLocaleTimeString('pt-BR', { 
                              hour: '2-digit', 
                              minute: '2-digit' 
                            })}
                          </span>
                          
                          {message.role === 'assistant' && (
                            <div className="flex items-center gap-2">
                              <Button
                                variant="ghost"
                                size="sm"
                                className="h-6 w-6 p-0 hover:bg-background/20"
                                onClick={() => copyMessage(message.content)}
                              >
                                <Copy className="h-3 w-3" />
                              </Button>
                              
                              <div className="flex gap-1">
                                <Button
                                  variant="ghost"
                                  size="sm"
                                  className={`h-6 w-6 p-0 hover:bg-background/20 ${
                                    message.feedback === 'positive' ? 'text-green-600' : ''
                                  }`}
                                  onClick={() => handleFeedback(message.id, 'positive')}
                                >
                                  <ThumbsUp className="h-3 w-3" />
                                </Button>
                                <Button
                                  variant="ghost"
                                  size="sm"
                                  className={`h-6 w-6 p-0 hover:bg-background/20 ${
                                    message.feedback === 'negative' ? 'text-red-600' : ''
                                  }`}
                                  onClick={() => handleFeedback(message.id, 'negative')}
                                >
                                  <ThumbsDown className="h-3 w-3" />
                                </Button>
                              </div>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  ))}
                  
                  {isLoading && (
                    <div className="flex justify-start">
                      <div className="bg-muted rounded-lg p-4 max-w-[85%]">
                        <div className="flex items-center gap-2">
                          <div className="animate-spin h-4 w-4 border-2 border-primary border-t-transparent rounded-full"></div>
                          <span className="text-sm">IA Musical est√° analisando e preparando resposta especializada...</span>
                        </div>
                      </div>
                    </div>
                  )}
                  
                  <div ref={messagesEndRef} />
                </div>
                
                {/* Input */}
                <div className="flex gap-2">
                  <Textarea
                    value={inputMessage}
                    onChange={(e) => setInputMessage(e.target.value)}
                    placeholder="Digite sua pergunta sobre teoria musical, t√©cnica instrumental ou an√°lise harm√¥nica..."
                    className="flex-1 min-h-[80px] resize-none"
                    onKeyDown={(e) => {
                      if (e.key === 'Enter' && !e.shiftKey) {
                        e.preventDefault();
                        handleSendMessage();
                      }
                    }}
                  />
                  <Button 
                    onClick={handleSendMessage}
                    disabled={!inputMessage.trim() || isLoading}
                    className="self-end"
                    size="lg"
                  >
                    <Send className="h-4 w-4" />
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Configuration Panel */}
          <div className="space-y-4">
            {/* IA Settings */}
            <Card>
              <CardHeader>
                <CardTitle className="flex items-center gap-2 text-lg">
                  <Settings className="h-5 w-5" />
                  Configura√ß√µes Pedag√≥gicas
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-4">
                <div>
                  <label className="text-sm font-medium mb-2 block">Instrumento Principal</label>
                  <Select value={instrument} onValueChange={setInstrument}>
                    <SelectTrigger>
                      <SelectValue placeholder="Selecione seu instrumento" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="piano">Piano</SelectItem>
                      <SelectItem value="viol√£o">Viol√£o</SelectItem>
                      <SelectItem value="guitarra">Guitarra</SelectItem>
                      <SelectItem value="baixo">Baixo</SelectItem>
                      <SelectItem value="bateria">Bateria</SelectItem>
                      <SelectItem value="violino">Violino</SelectItem>
                      <SelectItem value="flauta">Flauta</SelectItem>
                      <SelectItem value="saxofone">Saxofone</SelectItem>
                      <SelectItem value="canto">Canto</SelectItem>
                      <SelectItem value="outros">Outros</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <div>
                  <label className="text-sm font-medium mb-2 block">N√≠vel Musical</label>
                  <Select value={nivel} onValueChange={(value: any) => setNivel(value)}>
                    <SelectTrigger>
                      <SelectValue />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="iniciante">Iniciante (0-6 meses)</SelectItem>
                      <SelectItem value="elementar">Elementar (6-18 meses)</SelectItem>
                      <SelectItem value="intermediario">Intermedi√°rio (1,5-3 anos)</SelectItem>
                      <SelectItem value="avancado">Avan√ßado (3+ anos)</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <div>
                  <label className="text-sm font-medium mb-2 block">Estilo Musical</label>
                  <Select value={musicStyle} onValueChange={setMusicStyle}>
                    <SelectTrigger>
                      <SelectValue placeholder="Selecione um estilo" />
                    </SelectTrigger>
                    <SelectContent>
                      <SelectItem value="classico">Cl√°ssico</SelectItem>
                      <SelectItem value="jazz">Jazz</SelectItem>
                      <SelectItem value="bossa nova">Bossa Nova</SelectItem>
                      <SelectItem value="mpb">MPB</SelectItem>
                      <SelectItem value="rock">Rock</SelectItem>
                      <SelectItem value="pop">Pop</SelectItem>
                      <SelectItem value="blues">Blues</SelectItem>
                      <SelectItem value="samba">Samba</SelectItem>
                      <SelectItem value="choro">Choro</SelectItem>
                      <SelectItem value="forr√≥">Forr√≥</SelectItem>
                    </SelectContent>
                  </Select>
                </div>
                
                <Button 
                  className="w-full"
                  onClick={() => {
                    toast({
                      title: "Configura√ß√µes aplicadas!",
                      description: "IA personalizada para suas prefer√™ncias pedag√≥gicas"
                    });
                  }}
                >
                  <Music className="h-4 w-4 mr-2" />
                  Aplicar Configura√ß√µes
                </Button>
              </CardContent>
            </Card>

            {/* Quick Topics */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg flex items-center gap-2">
                  <BookOpen className="h-5 w-5" />
                  T√≥picos Pedag√≥gicos
                </CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-2">
                  {quickTopics.map((topic) => (
                    <Button
                      key={topic}
                      variant="outline"
                      size="sm"
                      className="justify-start text-xs h-8"
                      onClick={() => setInputMessage(`Explique ${topic} para n√≠vel ${nivel} no ${instrument || 'piano'}`)}
                    >
                      <Target className="h-3 w-3 mr-2" />
                      {topic}
                    </Button>
                  ))}
                </div>
              </CardContent>
            </Card>

            {/* Stats */}
            <Card>
              <CardHeader>
                <CardTitle className="text-lg flex items-center gap-2">
                  <TrendingUp className="h-5 w-5" />
                  Estat√≠sticas da Sess√£o
                </CardTitle>
              </CardHeader>
              <CardContent className="space-y-3">
                <div className="flex justify-between text-sm">
                  <span>Perguntas feitas:</span>
                  <span className="font-medium">{messages.filter(m => m.role === 'user').length}</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>Respostas da IA:</span>
                  <span className="font-medium">{messages.filter(m => m.role === 'assistant').length}</span>
                </div>
                <div className="flex justify-between text-sm">
                  <span>Feedbacks positivos:</span>
                  <span className="font-medium text-green-600">
                    {messages.filter(m => m.feedback === 'positive').length}
                  </span>
                </div>
                <Separator />
                <div className="text-xs text-muted-foreground text-center">
                  N√≠vel atual: <span className="font-medium capitalize">{nivel}</span>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </div>
    </Layout>
  );
}